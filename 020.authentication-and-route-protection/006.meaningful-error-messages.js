/*
    Link: https://www.udemy.com/course/the-complete-guide-to-angular-2/learn/lecture/14466428#questions

    We will add a more generic error handling approach which shows a more meaningful error message to the user
    based on the error message generated by the server.

    We will add use a pipe and then the rxJs operators catchError and throwError for this purpose
    signup(email: string, password: string) {
    const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCNAAcJRbb69wtlRtX_qb9SGB2W5Hi3rCo';
    return this.http.post<AuthResponseData>(url, {
      email,
      password,
      returnSecureToken: true
    })
      .pipe(
        catchError(errorRes => {
          let errorMessage = 'An unknown error occurred';
          if (!errorRes.error || !errorRes.error.error) {
            return throwError(errorMessage);
          }
          switch (errorRes.error.error.message) {
            case 'EMAIL_EXISTS':
              errorMessage = 'This email already exists';
          }
          return throwError(errorMessage);
        })
      );
  }

 */